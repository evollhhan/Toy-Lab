{"version":3,"sources":["webpack:///webpack/bootstrap d8fd99e190fea467ea2a","webpack:///./main.js","webpack:///./models/scene1.js"],"names":["stage","scene","renderer","camera","getAspect","window","innerWidth","innerHeight","init","document","querySelector","THREE","Scene","PerspectiveCamera","position","set","s1","create","WebGLRenderer","alpha","setClearColor","setPixelRatio","devicePixelRatio","setSize","autoClear","appendChild","domElement","animate","requestAnimationFrame","render","TWEEN","update","clear","$scene","loader","TextureLoader","createSnow","load","Resource","snow","geom","PlaneGeometry","materail","MeshBasicMaterial","map","texture","transparent","mesh","Mesh","add"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA;;;;;;AAEA,KAAIA,cAAJ;AAAA,KAAWC,cAAX;AAAA,KAAkBC,iBAAlB;AAAA,KAA4BC,eAA5B;;AAEA,UAASC,SAAT,GAAsB;AACpB,UAAOC,OAAOC,UAAP,GAAoBD,OAAOE,WAAlC;AACD;;AAED,UAASC,IAAT,GAAiB;AACf;AACAR,WAAQS,SAASC,aAAT,CAAuB,eAAvB,CAAR;;AAEA;AACAT,WAAQ,IAAIU,MAAMC,KAAV,EAAR;AACAP,UAAOJ,KAAP,GAAeA,KAAf;;AAEA;AACAE,YAAS,IAAIQ,MAAME,iBAAV,CAA4B,EAA5B,EAAgCT,WAAhC,EAA6C,CAA7C,EAAgD,IAAhD,CAAT;AACAD,UAAOW,QAAP,CAAgBC,GAAhB,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;;AAEA;AACA,OAAIC,KAAK,oBAAWf,KAAX,CAAT;AACAe,MAAGC,MAAH;;AAEA;AACAf,cAAW,IAAIS,MAAMO,aAAV,CAAwB;AACjCC,YAAO;AAD0B,IAAxB,CAAX;AAGAjB,YAASkB,aAAT,CAAuB,QAAvB;AACAlB,YAASmB,aAAT,CAAuBhB,OAAOiB,gBAA9B;AACApB,YAASqB,OAAT,CAAiBlB,OAAOC,UAAxB,EAAoCD,OAAOE,WAA3C;AACAL,YAASsB,SAAT,GAAqB,KAArB;AACAxB,SAAMyB,WAAN,CAAkBvB,SAASwB,UAA3B;AACD;;AAED,UAASC,OAAT,GAAoB;AAClBC,yBAAsBD,OAAtB;AACAE;AACD;;AAED,UAASA,MAAT,GAAmB;AACjBC,SAAMC,MAAN;AACA7B,YAAS8B,KAAT;AACA9B,YAAS2B,MAAT,CAAgB5B,KAAhB,EAAuBE,MAAvB;AACD;;AAEDK;AACAmB,W;;;;;;;;;;;;;mBC/Ce,UAAUM,MAAV,EAAkB;AAC/B,OAAIhC,QAAQgC,MAAZ;AACA,OAAIC,SAAS,IAAIvB,MAAMwB,aAAV,EAAb;;AAEA,YAASC,UAAT,GAAuB;AACrBF,YAAOG,IAAP,CAAYhC,OAAOiC,QAAP,CAAgBC,IAA5B,EAAkC,mBAAW;AAC3C,WAAIC,OAAO,IAAI7B,MAAM8B,aAAV,CAAwB,EAAxB,EAA4B,EAA5B,CAAX;AACA,WAAIC,WAAW,IAAI/B,MAAMgC,iBAAV,CAA4B;AACzCC,cAAKC;AADoC,QAA5B,CAAf;AAGAH,gBAASI,WAAT,GAAuB,IAAvB;AACA,WAAIC,OAAO,IAAIpC,MAAMqC,IAAV,CAAeR,IAAf,EAAqBE,QAArB,CAAX;AACAK,YAAKjC,QAAL,CAAcC,GAAd,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAC,GAAzB;AACAd,aAAMgD,GAAN,CAAUF,IAAV;AACD,MATD;AAUD;;AAED,UAAO;AACL9B,WADK,oBACK;AACRmB;AACD;AAHI,IAAP;AAKD,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d8fd99e190fea467ea2a","import Scene1 from './models/scene1'\r\n\r\nlet stage, scene, renderer, camera\r\n\r\nfunction getAspect () {\r\n  return window.innerWidth / window.innerHeight\r\n}\r\n\r\nfunction init () {\r\n  // -- Stage\r\n  stage = document.querySelector('.renderObject')\r\n\r\n  // -- Scene\r\n  scene = new THREE.Scene()\r\n  window.scene = scene\r\n\r\n  // -- Camera\r\n  camera = new THREE.PerspectiveCamera(75, getAspect(), 1, 5000)\r\n  camera.position.set(0, 0, 0)\r\n\r\n  // -- Create Element\r\n  let s1 = new Scene1(scene)\r\n  s1.create()\r\n\r\n  // -- Render\r\n  renderer = new THREE.WebGLRenderer({\r\n    alpha: true\r\n  })\r\n  renderer.setClearColor(0x000000)\r\n  renderer.setPixelRatio(window.devicePixelRatio)\r\n  renderer.setSize(window.innerWidth, window.innerHeight)\r\n  renderer.autoClear = false\r\n  stage.appendChild(renderer.domElement)\r\n}\r\n\r\nfunction animate () {\r\n  requestAnimationFrame(animate)\r\n  render()\r\n}\r\n\r\nfunction render () {\r\n  TWEEN.update()\r\n  renderer.clear()\r\n  renderer.render(scene, camera)\r\n}\r\n\r\ninit()\r\nanimate()\r\n\n\n\n// WEBPACK FOOTER //\n// ./main.js","export default function ($scene) {\r\n  let scene = $scene\r\n  let loader = new THREE.TextureLoader()\r\n\r\n  function createSnow () {\r\n    loader.load(window.Resource.snow, texture => {\r\n      let geom = new THREE.PlaneGeometry(64, 64)\r\n      let materail = new THREE.MeshBasicMaterial({\r\n        map: texture\r\n      })\r\n      materail.transparent = true\r\n      let mesh = new THREE.Mesh(geom, materail)\r\n      mesh.position.set(0, 0, -600)\r\n      scene.add(mesh)\r\n    })\r\n  }\r\n\r\n  return {\r\n    create () {\r\n      createSnow()\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./models/scene1.js"],"sourceRoot":""}